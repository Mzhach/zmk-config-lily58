/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        kp_yo {
            bindings = <&kp GRAVE>;
            key-positions = <17 50>;
            layers = <0>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        bht_win_switch_language: bht_win_switch_language {
            compatible = "zmk,behavior-hold-tap";
            label = "BHT_WIN_SWITCH_LANGUAGE";
            bindings = <&kp>, <&mcr_win_switch_language>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
        };
    };

    macros {
        mcr_win_switch_language: mcr_win_switch_language {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LSHIFT &kp LCTRL>;

            label = "MCR_WIN_SWITCH_LANGUAGE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                              &kp N6        &kp N7         &kp N8           &kp N9   &kp N0    &kp EQUAL
&kp TAB    &kp Q   &kp W   &kp E     &kp R     &kp T                               &kp Y         &kp U          &kp I            &kp O    &kp P     &kp MINUS
&kp LCTRL  &kp A   &kp S   &kp D     &kp F     &kp G                               &kp H         &kp J          &kp K            &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C     &kp V     &kp B        &kp LBKT     &kp RBKT  &kp N         &kp M          &kp COMMA        &kp DOT  &kp FSLH  &kp BACKSLASH
                           &kp LALT  &kp LGUI  &lt 1 GRAVE  &kp SPACE    &kp RET   &lt 2 DELETE  &kp BACKSPACE  &kp RIGHT_SHIFT
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&none   &none            &none        &none     &none       &none                          &none      &none          &none            &none                 &none                  &none
&trans  &none            &none        &none     &none       &none                          &none      &none          &none            &none                 &none                  &none
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                    &kp CARET  &kp AMPERSAND  &kp KP_ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE
&trans  &none            &none        &none     &none       &none        &trans    &trans  &none      &kp MINUS      &kp KP_PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE
                                      &trans    &trans      &trans       &trans    &trans  &trans     &trans         &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp F1  &kp F2  &kp F3          &kp F4          &kp F5           &kp F6                           &kp F7  &kp F8           &kp F9           &kp F10          &kp F11          &kp F12
&trans  &none   &kp HOME        &kp UP_ARROW    &kp END          &kp PAGE_UP                      &none   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_DIVIDE    &kp KP_ASTERISK
&trans  &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN                    &none   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_SUBTRACT  &kp KP_PLUS
&trans  &none   &none           &none           &none            &none          &none     &none   &none   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT       &kp KP_EQUAL
                                &trans          &trans           &trans         &trans    &trans  &trans  &trans           &trans
            >;
        };

        control_layer {
            bindings = <
&none              &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4                                &none   &none   &none   &none  &none  &bt BT_CLR
&kp C_VOLUME_UP    &none         &none         &none             &none         &none                                       &none   &none   &none   &none  &none  &bt BT_CLR_ALL
&kp C_VOLUME_DOWN  &none         &none         &kp C_PLAY_PAUSE  &none         &none                                       &none   &none   &none   &none  &none  &none
&kp C_MUTE         &none         &none         &none             &none         &mcr_win_switch_language  &none     &none   &none   &none   &none   &none  &none  &none
                                               &trans            &trans        &trans                    &trans    &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        control_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
