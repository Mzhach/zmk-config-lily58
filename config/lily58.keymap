/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_RALT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        e_yo_modmorph: e_yo_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "E_YO_MODMORPH";
            bindings = <&kp T>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_RALT)>;
        };

        wsl_holdtap: wsl_holdtap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&win_switch_language>;

            label = "WSL_HOLDTAP";
        };
    };

    macros {
        win_switch_language: win_switch_language {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp LEFT_ALT>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "WIN_SWITCH_LANGUAGE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC                      &kp N1  &kp N2           &kp N3             &kp N4               &kp N5                                 &kp N6        &kp N7                &kp N8              &kp N9            &kp N0    &kp EQUAL
&kp TAB                      &kp Q   &kp W            &kp E              &kp R                &e_yo_modmorph                         &kp Y         &kp U                 &kp I               &kp O             &kp P     &kp MINUS
&kp LEFT_SHIFT               &kp A   &hrm LEFT_ALT S  &hrm LEFT_SHIFT D  &hrm LEFT_CONTROL F  &kp G                                  &kp H         &hrm RIGHT_CONTROL J  &hrm RIGHT_SHIFT K  &hrm RIGHT_ALT L  &kp SEMI  &kp SQT
&wsl_holdtap LEFT_CONTROL 0  &kp Z   &kp X            &kp C              &kp V                &kp B           &kp LBKT     &kp RBKT  &kp N         &ss_hs_modmorph       &kp COMMA           &kp DOT           &kp FSLH  &kp BACKSLASH
                                                      &kp LALT           &kp LGUI             &lt 1 GRAVE     &kp SPACE    &kp RET   &lt 2 DELETE  &kp BACKSPACE         &kp RIGHT_GUI
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &none      &none               &none           &none            &none                      &none   &none            &none            &none            &none            &none
&trans  &kp HOME   &kp LC(LEFT_ARROW)  &kp UP_ARROW    &kp LC(RIGHT)    &kp END                    &none   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_DIVIDE    &kp KP_ASTERISK
&trans  &kp LC(A)  &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW  &none                      &none   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_SUBTRACT  &kp KP_PLUS
&trans  &kp LC(Z)  &kp LC(X)           &kp LC(C)       &kp LC(V)        &none    &none     &none   &none   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT       &kp KP_EQUAL
                                       &trans          &trans           &trans   &trans    &trans  &trans  &trans           &kp KP_NUMBER_0
            >;
        };

        raise_layer {
            bindings = <
&kp F1  &kp F2           &kp F3       &kp F4    &kp F5      &kp F6                         &kp F7     &kp F8         &kp F9           &kp F10               &kp F11                &kp F12
&trans  &none            &none        &none     &none       &none                          &none      &none          &none            &none                 &none                  &none
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                    &kp CARET  &kp AMPERSAND  &kp KP_ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE
&trans  &none            &none        &none     &none       &none        &trans    &trans  &none      &kp MINUS      &kp KP_PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE
                                      &trans    &trans      &trans       &trans    &trans  &trans     &trans         &trans
            >;
        };

        control_layer {
            bindings = <
&none              &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4                                &none   &none   &none   &none  &none  &bt BT_CLR
&kp C_VOLUME_UP    &none         &to 4         &none             &none         &none                                       &none   &none   &none   &none  &none  &bt BT_CLR_ALL
&kp C_VOLUME_DOWN  &none         &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT    &none                                       &none   &none   &none   &none  &none  &none
&kp C_MUTE         &none         &none         &none             &none         &none         &out OUT_BLE    &out OUT_USB  &none   &none   &none   &none  &none  &none
                                               &trans            &trans        &trans        &trans          &trans        &trans  &trans  &trans
            >;
        };

        gaming_layer {
            bindings = <
&kp ESCAPE        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                      &none  &none  &none  &none  &none  &none
&kp TAB           &kp T         &kp Q         &kp W         &kp E         &kp R                       &none  &none  &none  &none  &none  &none
&kp LEFT_SHIFT    &kp G         &kp A         &kp S         &kp D         &kp F                       &none  &none  &none  &none  &none  &none
&kp LEFT_CONTROL  &kp B         &kp Z         &kp X         &kp C         &kp V   &kp ENTER    &none  &none  &none  &none  &none  &none  &none
                                              &none         &none         &mo 5   &kp SPACE    &none  &none  &none  &none
            >;
        };

        gaming_lower_layer {
            bindings = <
&to 0  &kp NUMBER_6  &kp N7  &kp N8  &kp N9  &kp N0                   &none  &none  &none  &none  &none  &none
&none  &none         &none   &none   &none   &none                    &none  &none  &none  &none  &none  &none
&none  &none         &none   &none   &none   &none                    &none  &none  &none  &none  &none  &none
&none  &none         &none   &none   &none   &none   &trans    &none  &none  &none  &none  &none  &none  &none
                             &none   &none   &none   &trans    &none  &none  &none  &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        control_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
